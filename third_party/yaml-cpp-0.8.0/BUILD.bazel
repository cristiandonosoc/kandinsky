yaml_cpp_defines = select({
    # On Windows, ensure static linking is used.
    "@platforms//os:windows": ["YAML_CPP_STATIC_DEFINE", "YAML_CPP_NO_CONTRIB"],
    "//conditions:default": [],
})

yaml_cpp_copts = select({
    # On Windows we compile in opt mode.
    "@platforms//os:windows": [
        "/O2",
        "/DNDEBUG",
    ],
    "//conditions:default": [],
})

yaml_cpp_linkopts = select({
    # On Windows, enable Link Time Code Generation
    "@platforms//os:windows": ["/LTCG"],
    "//conditions:default": [],
})

cc_library(
    name = "yaml-cpp_internal",
    visibility = ["//:__subpackages__"],
    strip_include_prefix = "src",
    hdrs = glob(["src/**/*.h"]),
)

cc_library(
    name = "yaml-cpp",
    hdrs = glob(["include/**/*.h"]),
    srcs = glob(["src/**/*.cpp", "src/**/*.h"]),
    includes = ["include"],
    defines = yaml_cpp_defines,
    copts = yaml_cpp_copts,
    linkopts = yaml_cpp_linkopts,
    visibility = ["//third_party:__pkg__"],
)

cc_import(
    name = "yaml-cpp-prebuilt-import",
    static_library = "bin/yaml-cpp.lib",
    hdrs = glob(["include/**/*.h"]),
    includes = ["include"],
    strip_include_prefix = "include",
    visibility = ["//third_party:__pkg__"],
)

cc_library(
    name = "yaml-cpp-prebuilt",
    deps = [":yaml-cpp-prebuilt-import"],
    defines = yaml_cpp_defines,
    copts = yaml_cpp_copts,
    linkopts = yaml_cpp_linkopts,
    visibility = ["//third_party:__pkg__"],
)
