#include <kandinsky/game.h>

#include <kandinsky/utils/defer.h>

#include <SDL3/SDL_log.h>

namespace kdk {

bool IsValid(const LoadedGameLibrary& lgl) {
    // clang-format off
    return lgl.SO != nullptr &&
		   lgl.GameInit != nullptr &&
           lgl.GameUpdate != nullptr &&
		   lgl.GameRender != nullptr;
    // clang-format on
}

LoadedGameLibrary LoadGameLibrary(PlatformState* ps, const char* so_path) {
    LoadedGameLibrary lgl = {};

    lgl.SO = SDL_LoadObject(so_path);
    if (!lgl.SO) {
        SDL_Log("ERROR: Could not find SO at \"%s\"", so_path);
        return {};
    }

#define LOAD_FUNCTION(lgl, function_name)                                       \
    {                                                                           \
        SDL_FunctionPointer pointer = SDL_LoadFunction(lgl.SO, #function_name); \
        if (pointer == NULL) {                                                  \
            SDL_Log("ERROR: Didn't find function " #function_name);             \
            return {};                                                          \
        }                                                                       \
        lgl.function_name = (bool (*)(PlatformState*))pointer;                  \
    }

    LOAD_FUNCTION(lgl, OnSharedObjectLoaded);
    LOAD_FUNCTION(lgl, OnSharedObjectUnloaded);
    LOAD_FUNCTION(lgl, GameInit);
    LOAD_FUNCTION(lgl, GameUpdate);
    LOAD_FUNCTION(lgl, GameRender);

#undef LOAD_FUNCTION

    if (!IsValid(lgl)) {
        SDL_Log("ERROR: LoadedGameLibrary is not valid!");
        SDL_UnloadObject(lgl.SO);
        return {};
    }

    if (!lgl.OnSharedObjectLoaded(ps)) {
        SDL_Log("ERROR: Calling DLLInit on loaded DLL");
        SDL_UnloadObject(lgl.SO);
        return {};
    }

    return lgl;
}

void UnloadGameLibrary(PlatformState* ps, LoadedGameLibrary* lgl) {
    if (!IsValid(*lgl)) {
        return;
    }

    DEFER {
        SDL_UnloadObject(lgl->SO);
        *lgl = {};
    };

    if (!lgl->OnSharedObjectUnloaded(ps)) {
        SDL_Log("ERROR: Unloading game DLL");
    }
}

void PatchOpenGLFunctions(PlatformState* ps) {
    ps->glBindFramebuffer = glBindFramebuffer;
    ps->glBindRenderbuffer = glBindRenderbuffer;
    ps->glBlitFramebuffer = glBlitFramebuffer;
    ps->glCheckFramebufferStatus = glCheckFramebufferStatus;
    ps->glDeleteFramebuffers = glDeleteFramebuffers;
    ps->glDeleteRenderbuffers = glDeleteRenderbuffers;
    ps->glFramebufferRenderbuffer = glFramebufferRenderbuffer;
    ps->glFramebufferTexture1D = glFramebufferTexture1D;
    ps->glFramebufferTexture2D = glFramebufferTexture2D;
    ps->glFramebufferTexture3D = glFramebufferTexture3D;
    ps->glFramebufferTextureLayer = glFramebufferTextureLayer;
    ps->glGenFramebuffers = glGenFramebuffers;
    ps->glGenRenderbuffers = glGenRenderbuffers;
    ps->glGenerateMipmap = glGenerateMipmap;
    ps->glGetFramebufferAttachmentParameteriv = glGetFramebufferAttachmentParameteriv;
    ps->glGetRenderbufferParameteriv = glGetRenderbufferParameteriv;
    ps->glIsFramebuffer = glIsFramebuffer;
    ps->glIsRenderbuffer = glIsRenderbuffer;
    ps->glRenderbufferStorage = glRenderbufferStorage;
    ps->glRenderbufferStorageMultisample = glRenderbufferStorageMultisample;

    ps->glActiveTexture = glActiveTexture;
    ps->glClientActiveTexture = glClientActiveTexture;
    ps->glCompressedTexImage1D = glCompressedTexImage1D;
    ps->glCompressedTexImage2D = glCompressedTexImage2D;
    ps->glCompressedTexImage3D = glCompressedTexImage3D;
    ps->glCompressedTexSubImage1D = glCompressedTexSubImage1D;
    ps->glCompressedTexSubImage2D = glCompressedTexSubImage2D;
    ps->glCompressedTexSubImage3D = glCompressedTexSubImage3D;
    ps->glGetCompressedTexImage = glGetCompressedTexImage;
    ps->glLoadTransposeMatrixd = glLoadTransposeMatrixd;
    ps->glLoadTransposeMatrixf = glLoadTransposeMatrixf;
    ps->glMultTransposeMatrixd = glMultTransposeMatrixd;
    ps->glMultTransposeMatrixf = glMultTransposeMatrixf;
    ps->glMultiTexCoord1d = glMultiTexCoord1d;
    ps->glMultiTexCoord1dv = glMultiTexCoord1dv;
    ps->glMultiTexCoord1f = glMultiTexCoord1f;
    ps->glMultiTexCoord1fv = glMultiTexCoord1fv;
    ps->glMultiTexCoord1i = glMultiTexCoord1i;
    ps->glMultiTexCoord1iv = glMultiTexCoord1iv;
    ps->glMultiTexCoord1s = glMultiTexCoord1s;
    ps->glMultiTexCoord1sv = glMultiTexCoord1sv;
    ps->glMultiTexCoord2d = glMultiTexCoord2d;
    ps->glMultiTexCoord2dv = glMultiTexCoord2dv;
    ps->glMultiTexCoord2f = glMultiTexCoord2f;
    ps->glMultiTexCoord2fv = glMultiTexCoord2fv;
    ps->glMultiTexCoord2i = glMultiTexCoord2i;
    ps->glMultiTexCoord2iv = glMultiTexCoord2iv;
    ps->glMultiTexCoord2s = glMultiTexCoord2s;
    ps->glMultiTexCoord2sv = glMultiTexCoord2sv;
    ps->glMultiTexCoord3d = glMultiTexCoord3d;
    ps->glMultiTexCoord3dv = glMultiTexCoord3dv;
    ps->glMultiTexCoord3f = glMultiTexCoord3f;
    ps->glMultiTexCoord3fv = glMultiTexCoord3fv;
    ps->glMultiTexCoord3i = glMultiTexCoord3i;
    ps->glMultiTexCoord3iv = glMultiTexCoord3iv;
    ps->glMultiTexCoord3s = glMultiTexCoord3s;
    ps->glMultiTexCoord3sv = glMultiTexCoord3sv;
    ps->glMultiTexCoord4d = glMultiTexCoord4d;
    ps->glMultiTexCoord4dv = glMultiTexCoord4dv;
    ps->glMultiTexCoord4f = glMultiTexCoord4f;
    ps->glMultiTexCoord4fv = glMultiTexCoord4fv;
    ps->glMultiTexCoord4i = glMultiTexCoord4i;
    ps->glMultiTexCoord4iv = glMultiTexCoord4iv;
    ps->glMultiTexCoord4s = glMultiTexCoord4s;
    ps->glMultiTexCoord4sv = glMultiTexCoord4sv;
    ps->glSampleCoverage = glSampleCoverage;

    ps->glBeginConditionalRender = glBeginConditionalRender;
    ps->glBeginTransformFeedback = glBeginTransformFeedback;
    ps->glBindFragDataLocation = glBindFragDataLocation;
    ps->glClampColor = glClampColor;
    ps->glClearBufferfi = glClearBufferfi;
    ps->glClearBufferfv = glClearBufferfv;
    ps->glClearBufferiv = glClearBufferiv;
    ps->glClearBufferuiv = glClearBufferuiv;
    ps->glColorMaski = glColorMaski;
    ps->glDisablei = glDisablei;
    ps->glEnablei = glEnablei;
    ps->glEndConditionalRender = glEndConditionalRender;
    ps->glEndTransformFeedback = glEndTransformFeedback;
    ps->glGetBooleani_v = glGetBooleani_v;
    ps->glGetFragDataLocation = glGetFragDataLocation;
    ps->glGetStringi = glGetStringi;
    ps->glGetTexParameterIiv = glGetTexParameterIiv;
    ps->glGetTexParameterIuiv = glGetTexParameterIuiv;
    ps->glGetTransformFeedbackVarying = glGetTransformFeedbackVarying;
    ps->glGetUniformuiv = glGetUniformuiv;
    ps->glGetVertexAttribIiv = glGetVertexAttribIiv;
    ps->glGetVertexAttribIuiv = glGetVertexAttribIuiv;
    ps->glIsEnabledi = glIsEnabledi;
    ps->glTexParameterIiv = glTexParameterIiv;
    ps->glTexParameterIuiv = glTexParameterIuiv;
    ps->glTransformFeedbackVaryings = glTransformFeedbackVaryings;
    ps->glUniform1ui = glUniform1ui;
    ps->glUniform1uiv = glUniform1uiv;
    ps->glUniform2ui = glUniform2ui;
    ps->glUniform2uiv = glUniform2uiv;
    ps->glUniform3ui = glUniform3ui;
    ps->glUniform3uiv = glUniform3uiv;
    ps->glUniform4ui = glUniform4ui;
    ps->glUniform4uiv = glUniform4uiv;
    ps->glVertexAttribI1i = glVertexAttribI1i;
    ps->glVertexAttribI1iv = glVertexAttribI1iv;
    ps->glVertexAttribI1ui = glVertexAttribI1ui;
    ps->glVertexAttribI1uiv = glVertexAttribI1uiv;
    ps->glVertexAttribI2i = glVertexAttribI2i;
    ps->glVertexAttribI2iv = glVertexAttribI2iv;
    ps->glVertexAttribI2ui = glVertexAttribI2ui;
    ps->glVertexAttribI2uiv = glVertexAttribI2uiv;
    ps->glVertexAttribI3i = glVertexAttribI3i;
    ps->glVertexAttribI3iv = glVertexAttribI3iv;
    ps->glVertexAttribI3ui = glVertexAttribI3ui;
    ps->glVertexAttribI3uiv = glVertexAttribI3uiv;
    ps->glVertexAttribI4bv = glVertexAttribI4bv;
    ps->glVertexAttribI4i = glVertexAttribI4i;
    ps->glVertexAttribI4iv = glVertexAttribI4iv;
    ps->glVertexAttribI4sv = glVertexAttribI4sv;
    ps->glVertexAttribI4ubv = glVertexAttribI4ubv;
    ps->glVertexAttribI4ui = glVertexAttribI4ui;
    ps->glVertexAttribI4uiv = glVertexAttribI4uiv;
    ps->glVertexAttribI4usv = glVertexAttribI4usv;
    ps->glVertexAttribIPointer = glVertexAttribIPointer;

    ps->glAttachShader = glAttachShader;
    ps->glBindAttribLocation = glBindAttribLocation;
    ps->glBlendEquationSeparate = glBlendEquationSeparate;
    ps->glCompileShader = glCompileShader;
    ps->glCreateProgram = glCreateProgram;
    ps->glCreateShader = glCreateShader;
    ps->glDeleteProgram = glDeleteProgram;
    ps->glDeleteShader = glDeleteShader;
    ps->glDetachShader = glDetachShader;
    ps->glDisableVertexAttribArray = glDisableVertexAttribArray;
    ps->glDrawBuffers = glDrawBuffers;
    ps->glEnableVertexAttribArray = glEnableVertexAttribArray;
    ps->glGetActiveAttrib = glGetActiveAttrib;
    ps->glGetActiveUniform = glGetActiveUniform;
    ps->glGetAttachedShaders = glGetAttachedShaders;
    ps->glGetAttribLocation = glGetAttribLocation;
    ps->glGetProgramInfoLog = glGetProgramInfoLog;
    ps->glGetProgramiv = glGetProgramiv;
    ps->glGetShaderInfoLog = glGetShaderInfoLog;
    ps->glGetShaderSource = glGetShaderSource;
    ps->glGetShaderiv = glGetShaderiv;
    ps->glGetUniformLocation = glGetUniformLocation;
    ps->glGetUniformfv = glGetUniformfv;
    ps->glGetUniformiv = glGetUniformiv;
    ps->glGetVertexAttribPointerv = glGetVertexAttribPointerv;
    ps->glGetVertexAttribdv = glGetVertexAttribdv;
    ps->glGetVertexAttribfv = glGetVertexAttribfv;
    ps->glGetVertexAttribiv = glGetVertexAttribiv;
    ps->glIsProgram = glIsProgram;
    ps->glIsShader = glIsShader;
    ps->glLinkProgram = glLinkProgram;
    ps->glShaderSource = glShaderSource;
    ps->glStencilFuncSeparate = glStencilFuncSeparate;
    ps->glStencilMaskSeparate = glStencilMaskSeparate;
    ps->glStencilOpSeparate = glStencilOpSeparate;
    ps->glUniform1f = glUniform1f;
    ps->glUniform1fv = glUniform1fv;
    ps->glUniform1i = glUniform1i;
    ps->glUniform1iv = glUniform1iv;
    ps->glUniform2f = glUniform2f;
    ps->glUniform2fv = glUniform2fv;
    ps->glUniform2i = glUniform2i;
    ps->glUniform2iv = glUniform2iv;
    ps->glUniform3f = glUniform3f;
    ps->glUniform3fv = glUniform3fv;
    ps->glUniform3i = glUniform3i;
    ps->glUniform3iv = glUniform3iv;
    ps->glUniform4f = glUniform4f;
    ps->glUniform4fv = glUniform4fv;
    ps->glUniform4i = glUniform4i;
    ps->glUniform4iv = glUniform4iv;
    ps->glUniformMatrix2fv = glUniformMatrix2fv;
    ps->glUniformMatrix3fv = glUniformMatrix3fv;
    ps->glUniformMatrix4fv = glUniformMatrix4fv;
    ps->glUseProgram = glUseProgram;
    ps->glValidateProgram = glValidateProgram;
    ps->glVertexAttrib1d = glVertexAttrib1d;
    ps->glVertexAttrib1dv = glVertexAttrib1dv;
    ps->glVertexAttrib1f = glVertexAttrib1f;
    ps->glVertexAttrib1fv = glVertexAttrib1fv;
    ps->glVertexAttrib1s = glVertexAttrib1s;
    ps->glVertexAttrib1sv = glVertexAttrib1sv;
    ps->glVertexAttrib2d = glVertexAttrib2d;
    ps->glVertexAttrib2dv = glVertexAttrib2dv;
    ps->glVertexAttrib2f = glVertexAttrib2f;
    ps->glVertexAttrib2fv = glVertexAttrib2fv;
    ps->glVertexAttrib2s = glVertexAttrib2s;
    ps->glVertexAttrib2sv = glVertexAttrib2sv;
    ps->glVertexAttrib3d = glVertexAttrib3d;
    ps->glVertexAttrib3dv = glVertexAttrib3dv;
    ps->glVertexAttrib3f = glVertexAttrib3f;
    ps->glVertexAttrib3fv = glVertexAttrib3fv;
    ps->glVertexAttrib3s = glVertexAttrib3s;
    ps->glVertexAttrib3sv = glVertexAttrib3sv;
    ps->glVertexAttrib4Nbv = glVertexAttrib4Nbv;
    ps->glVertexAttrib4Niv = glVertexAttrib4Niv;
    ps->glVertexAttrib4Nsv = glVertexAttrib4Nsv;
    ps->glVertexAttrib4Nub = glVertexAttrib4Nub;
    ps->glVertexAttrib4Nubv = glVertexAttrib4Nubv;
    ps->glVertexAttrib4Nuiv = glVertexAttrib4Nuiv;
    ps->glVertexAttrib4Nusv = glVertexAttrib4Nusv;
    ps->glVertexAttrib4bv = glVertexAttrib4bv;
    ps->glVertexAttrib4d = glVertexAttrib4d;
    ps->glVertexAttrib4dv = glVertexAttrib4dv;
    ps->glVertexAttrib4f = glVertexAttrib4f;
    ps->glVertexAttrib4fv = glVertexAttrib4fv;
    ps->glVertexAttrib4iv = glVertexAttrib4iv;
    ps->glVertexAttrib4s = glVertexAttrib4s;
    ps->glVertexAttrib4sv = glVertexAttrib4sv;
    ps->glVertexAttrib4ubv = glVertexAttrib4ubv;
    ps->glVertexAttrib4uiv = glVertexAttrib4uiv;
    ps->glVertexAttrib4usv = glVertexAttrib4usv;
    ps->glVertexAttribPointer = glVertexAttribPointer;

    ps->glBindVertexArray = glBindVertexArray;
    ps->glDeleteVertexArrays = glDeleteVertexArrays;
    ps->glGenVertexArrays = glGenVertexArrays;
    ps->glIsVertexArray = glIsVertexArray;

    ps->glBeginQuery = glBeginQuery;
    ps->glBindBuffer = glBindBuffer;
    ps->glBufferData = glBufferData;
    ps->glBufferSubData = glBufferSubData;
    ps->glDeleteBuffers = glDeleteBuffers;
    ps->glDeleteQueries = glDeleteQueries;
    ps->glEndQuery = glEndQuery;
    ps->glGenBuffers = glGenBuffers;
    ps->glGenQueries = glGenQueries;
    ps->glGetBufferParameteriv = glGetBufferParameteriv;
    ps->glGetBufferPointerv = glGetBufferPointerv;
    ps->glGetBufferSubData = glGetBufferSubData;
    ps->glGetQueryObjectiv = glGetQueryObjectiv;
    ps->glGetQueryObjectuiv = glGetQueryObjectuiv;
    ps->glGetQueryiv = glGetQueryiv;
    ps->glIsBuffer = glIsBuffer;
    ps->glIsQuery = glIsQuery;
    ps->glMapBuffer = glMapBuffer;
    ps->glUnmapBuffer = glUnmapBuffer;

    ps->glAccum = glAccum;
    ps->glAlphaFunc = glAlphaFunc;
    ps->glAreTexturesResident = glAreTexturesResident;
    ps->glArrayElement = glArrayElement;
    ps->glBegin = glBegin;
    ps->glBindTexture = glBindTexture;
    ps->glBitmap = glBitmap;
    ps->glBlendFunc = glBlendFunc;
    ps->glCallList = glCallList;
    ps->glCallLists = glCallLists;
    ps->glClear = glClear;
    ps->glClearAccum = glClearAccum;
    ps->glClearColor = glClearColor;
    ps->glClearDepth = glClearDepth;
    ps->glClearIndex = glClearIndex;
    ps->glClearStencil = glClearStencil;
    ps->glClipPlane = glClipPlane;
    ps->glColor3b = glColor3b;
    ps->glColor3bv = glColor3bv;
    ps->glColor3d = glColor3d;
    ps->glColor3dv = glColor3dv;
    ps->glColor3f = glColor3f;
    ps->glColor3fv = glColor3fv;
    ps->glColor3i = glColor3i;
    ps->glColor3iv = glColor3iv;
    ps->glColor3s = glColor3s;
    ps->glColor3sv = glColor3sv;
    ps->glColor3ub = glColor3ub;
    ps->glColor3ubv = glColor3ubv;
    ps->glColor3ui = glColor3ui;
    ps->glColor3uiv = glColor3uiv;
    ps->glColor3us = glColor3us;
    ps->glColor3usv = glColor3usv;
    ps->glColor4b = glColor4b;
    ps->glColor4bv = glColor4bv;
    ps->glColor4d = glColor4d;
    ps->glColor4dv = glColor4dv;
    ps->glColor4f = glColor4f;
    ps->glColor4fv = glColor4fv;
    ps->glColor4i = glColor4i;
    ps->glColor4iv = glColor4iv;
    ps->glColor4s = glColor4s;
    ps->glColor4sv = glColor4sv;
    ps->glColor4ub = glColor4ub;
    ps->glColor4ubv = glColor4ubv;
    ps->glColor4ui = glColor4ui;
    ps->glColor4uiv = glColor4uiv;
    ps->glColor4us = glColor4us;
    ps->glColor4usv = glColor4usv;
    ps->glColorMask = glColorMask;
    ps->glColorMaterial = glColorMaterial;
    ps->glColorPointer = glColorPointer;
    ps->glCopyPixels = glCopyPixels;
    ps->glCopyTexImage1D = glCopyTexImage1D;
    ps->glCopyTexImage2D = glCopyTexImage2D;
    ps->glCopyTexSubImage1D = glCopyTexSubImage1D;
    ps->glCopyTexSubImage2D = glCopyTexSubImage2D;
    ps->glCullFace = glCullFace;
    ps->glDeleteLists = glDeleteLists;
    ps->glDeleteTextures = glDeleteTextures;
    ps->glDepthFunc = glDepthFunc;
    ps->glDepthMask = glDepthMask;
    ps->glDepthRange = glDepthRange;
    ps->glDisable = glDisable;
    ps->glDisableClientState = glDisableClientState;
    ps->glDrawArrays = glDrawArrays;
    ps->glDrawBuffer = glDrawBuffer;
    ps->glDrawElements = glDrawElements;
    ps->glDrawPixels = glDrawPixels;
    ps->glEdgeFlag = glEdgeFlag;
    ps->glEdgeFlagPointer = glEdgeFlagPointer;
    ps->glEdgeFlagv = glEdgeFlagv;
    ps->glEnable = glEnable;
    ps->glEnableClientState = glEnableClientState;
    ps->glEnd = glEnd;
    ps->glEndList = glEndList;
    ps->glEvalCoord1d = glEvalCoord1d;
    ps->glEvalCoord1dv = glEvalCoord1dv;
    ps->glEvalCoord1f = glEvalCoord1f;
    ps->glEvalCoord1fv = glEvalCoord1fv;
    ps->glEvalCoord2d = glEvalCoord2d;
    ps->glEvalCoord2dv = glEvalCoord2dv;
    ps->glEvalCoord2f = glEvalCoord2f;
    ps->glEvalCoord2fv = glEvalCoord2fv;
    ps->glEvalMesh1 = glEvalMesh1;
    ps->glEvalMesh2 = glEvalMesh2;
    ps->glEvalPoint1 = glEvalPoint1;
    ps->glEvalPoint2 = glEvalPoint2;
    ps->glFeedbackBuffer = glFeedbackBuffer;
    ps->glFinish = glFinish;
    ps->glFlush = glFlush;
    ps->glFogf = glFogf;
    ps->glFogfv = glFogfv;
    ps->glFogi = glFogi;
    ps->glFogiv = glFogiv;
    ps->glFrontFace = glFrontFace;
    ps->glFrustum = glFrustum;
    ps->glGenLists = glGenLists;
    ps->glGenTextures = glGenTextures;
    ps->glGetBooleanv = glGetBooleanv;
    ps->glGetClipPlane = glGetClipPlane;
    ps->glGetDoublev = glGetDoublev;
    ps->glGetError = glGetError;
    ps->glGetFloatv = glGetFloatv;
    ps->glGetIntegerv = glGetIntegerv;
    ps->glGetLightfv = glGetLightfv;
    ps->glGetLightiv = glGetLightiv;
    ps->glGetMapdv = glGetMapdv;
    ps->glGetMapfv = glGetMapfv;
    ps->glGetMapiv = glGetMapiv;
    ps->glGetMaterialfv = glGetMaterialfv;
    ps->glGetMaterialiv = glGetMaterialiv;
    ps->glGetPixelMapfv = glGetPixelMapfv;
    ps->glGetPixelMapuiv = glGetPixelMapuiv;
    ps->glGetPixelMapusv = glGetPixelMapusv;
    ps->glGetPointerv = glGetPointerv;
    ps->glGetPolygonStipple = glGetPolygonStipple;
    ps->glGetString = glGetString;
    ps->glGetTexEnvfv = glGetTexEnvfv;
    ps->glGetTexEnviv = glGetTexEnviv;
    ps->glGetTexGendv = glGetTexGendv;
    ps->glGetTexGenfv = glGetTexGenfv;
    ps->glGetTexGeniv = glGetTexGeniv;
    ps->glGetTexImage = glGetTexImage;
    ps->glGetTexLevelParameterfv = glGetTexLevelParameterfv;
    ps->glGetTexLevelParameteriv = glGetTexLevelParameteriv;
    ps->glGetTexParameterfv = glGetTexParameterfv;
    ps->glGetTexParameteriv = glGetTexParameteriv;
    ps->glHint = glHint;
    ps->glIndexMask = glIndexMask;
    ps->glIndexPointer = glIndexPointer;
    ps->glIndexd = glIndexd;
    ps->glIndexdv = glIndexdv;
    ps->glIndexf = glIndexf;
    ps->glIndexfv = glIndexfv;
    ps->glIndexi = glIndexi;
    ps->glIndexiv = glIndexiv;
    ps->glIndexs = glIndexs;
    ps->glIndexsv = glIndexsv;
    ps->glIndexub = glIndexub;
    ps->glIndexubv = glIndexubv;
    ps->glInitNames = glInitNames;
    ps->glInterleavedArrays = glInterleavedArrays;
    ps->glIsEnabled = glIsEnabled;
    ps->glIsList = glIsList;
    ps->glIsTexture = glIsTexture;
    ps->glLightModelf = glLightModelf;
    ps->glLightModelfv = glLightModelfv;
    ps->glLightModeli = glLightModeli;
    ps->glLightModeliv = glLightModeliv;
    ps->glLightf = glLightf;
    ps->glLightfv = glLightfv;
    ps->glLighti = glLighti;
    ps->glLightiv = glLightiv;
    ps->glLineStipple = glLineStipple;
    ps->glLineWidth = glLineWidth;
    ps->glListBase = glListBase;
    ps->glLoadIdentity = glLoadIdentity;
    ps->glLoadMatrixd = glLoadMatrixd;
    ps->glLoadMatrixf = glLoadMatrixf;
    ps->glLoadName = glLoadName;
    ps->glLogicOp = glLogicOp;
    ps->glMap1d = glMap1d;
    ps->glMap1f = glMap1f;
    ps->glMap2d = glMap2d;
    ps->glMap2f = glMap2f;
    ps->glMapGrid1d = glMapGrid1d;
    ps->glMapGrid1f = glMapGrid1f;
    ps->glMapGrid2d = glMapGrid2d;
    ps->glMapGrid2f = glMapGrid2f;
    ps->glMaterialf = glMaterialf;
    ps->glMaterialfv = glMaterialfv;
    ps->glMateriali = glMateriali;
    ps->glMaterialiv = glMaterialiv;
    ps->glMatrixMode = glMatrixMode;
    ps->glMultMatrixd = glMultMatrixd;
    ps->glMultMatrixf = glMultMatrixf;
    ps->glNewList = glNewList;
    ps->glNormal3b = glNormal3b;
    ps->glNormal3bv = glNormal3bv;
    ps->glNormal3d = glNormal3d;
    ps->glNormal3dv = glNormal3dv;
    ps->glNormal3f = glNormal3f;
    ps->glNormal3fv = glNormal3fv;
    ps->glNormal3i = glNormal3i;
    ps->glNormal3iv = glNormal3iv;
    ps->glNormal3s = glNormal3s;
    ps->glNormal3sv = glNormal3sv;
    ps->glNormalPointer = glNormalPointer;
    ps->glOrtho = glOrtho;
    ps->glPassThrough = glPassThrough;
    ps->glPixelMapfv = glPixelMapfv;
    ps->glPixelMapuiv = glPixelMapuiv;
    ps->glPixelMapusv = glPixelMapusv;
    ps->glPixelStoref = glPixelStoref;
    ps->glPixelStorei = glPixelStorei;
    ps->glPixelTransferf = glPixelTransferf;
    ps->glPixelTransferi = glPixelTransferi;
    ps->glPixelZoom = glPixelZoom;
    ps->glPointSize = glPointSize;
    ps->glPolygonMode = glPolygonMode;
    ps->glPolygonOffset = glPolygonOffset;
    ps->glPolygonStipple = glPolygonStipple;
    ps->glPopAttrib = glPopAttrib;
    ps->glPopClientAttrib = glPopClientAttrib;
    ps->glPopMatrix = glPopMatrix;
    ps->glPopName = glPopName;
    ps->glPrioritizeTextures = glPrioritizeTextures;
    ps->glPushAttrib = glPushAttrib;
    ps->glPushClientAttrib = glPushClientAttrib;
    ps->glPushMatrix = glPushMatrix;
    ps->glPushName = glPushName;
    ps->glRasterPos2d = glRasterPos2d;
    ps->glRasterPos2dv = glRasterPos2dv;
    ps->glRasterPos2f = glRasterPos2f;
    ps->glRasterPos2fv = glRasterPos2fv;
    ps->glRasterPos2i = glRasterPos2i;
    ps->glRasterPos2iv = glRasterPos2iv;
    ps->glRasterPos2s = glRasterPos2s;
    ps->glRasterPos2sv = glRasterPos2sv;
    ps->glRasterPos3d = glRasterPos3d;
    ps->glRasterPos3dv = glRasterPos3dv;
    ps->glRasterPos3f = glRasterPos3f;
    ps->glRasterPos3fv = glRasterPos3fv;
    ps->glRasterPos3i = glRasterPos3i;
    ps->glRasterPos3iv = glRasterPos3iv;
    ps->glRasterPos3s = glRasterPos3s;
    ps->glRasterPos3sv = glRasterPos3sv;
    ps->glRasterPos4d = glRasterPos4d;
    ps->glRasterPos4dv = glRasterPos4dv;
    ps->glRasterPos4f = glRasterPos4f;
    ps->glRasterPos4fv = glRasterPos4fv;
    ps->glRasterPos4i = glRasterPos4i;
    ps->glRasterPos4iv = glRasterPos4iv;
    ps->glRasterPos4s = glRasterPos4s;
    ps->glRasterPos4sv = glRasterPos4sv;
    ps->glReadBuffer = glReadBuffer;
    ps->glReadPixels = glReadPixels;
    ps->glRectd = glRectd;
    ps->glRectdv = glRectdv;
    ps->glRectf = glRectf;
    ps->glRectfv = glRectfv;
    ps->glRecti = glRecti;
    ps->glRectiv = glRectiv;
    ps->glRects = glRects;
    ps->glRectsv = glRectsv;
    ps->glRenderMode = glRenderMode;
    ps->glRotated = glRotated;
    ps->glRotatef = glRotatef;
    ps->glScaled = glScaled;
    ps->glScalef = glScalef;
    ps->glScissor = glScissor;
    ps->glSelectBuffer = glSelectBuffer;
    ps->glShadeModel = glShadeModel;
    ps->glStencilFunc = glStencilFunc;
    ps->glStencilMask = glStencilMask;
    ps->glStencilOp = glStencilOp;
    ps->glTexCoord1d = glTexCoord1d;
    ps->glTexCoord1dv = glTexCoord1dv;
    ps->glTexCoord1f = glTexCoord1f;
    ps->glTexCoord1fv = glTexCoord1fv;
    ps->glTexCoord1i = glTexCoord1i;
    ps->glTexCoord1iv = glTexCoord1iv;
    ps->glTexCoord1s = glTexCoord1s;
    ps->glTexCoord1sv = glTexCoord1sv;
    ps->glTexCoord2d = glTexCoord2d;
    ps->glTexCoord2dv = glTexCoord2dv;
    ps->glTexCoord2f = glTexCoord2f;
    ps->glTexCoord2fv = glTexCoord2fv;
    ps->glTexCoord2i = glTexCoord2i;
    ps->glTexCoord2iv = glTexCoord2iv;
    ps->glTexCoord2s = glTexCoord2s;
    ps->glTexCoord2sv = glTexCoord2sv;
    ps->glTexCoord3d = glTexCoord3d;
    ps->glTexCoord3dv = glTexCoord3dv;
    ps->glTexCoord3f = glTexCoord3f;
    ps->glTexCoord3fv = glTexCoord3fv;
    ps->glTexCoord3i = glTexCoord3i;
    ps->glTexCoord3iv = glTexCoord3iv;
    ps->glTexCoord3s = glTexCoord3s;
    ps->glTexCoord3sv = glTexCoord3sv;
    ps->glTexCoord4d = glTexCoord4d;
    ps->glTexCoord4dv = glTexCoord4dv;
    ps->glTexCoord4f = glTexCoord4f;
    ps->glTexCoord4fv = glTexCoord4fv;
    ps->glTexCoord4i = glTexCoord4i;
    ps->glTexCoord4iv = glTexCoord4iv;
    ps->glTexCoord4s = glTexCoord4s;
    ps->glTexCoord4sv = glTexCoord4sv;
    ps->glTexCoordPointer = glTexCoordPointer;
    ps->glTexEnvf = glTexEnvf;
    ps->glTexEnvfv = glTexEnvfv;
    ps->glTexEnvi = glTexEnvi;
    ps->glTexEnviv = glTexEnviv;
    ps->glTexGend = glTexGend;
    ps->glTexGendv = glTexGendv;
    ps->glTexGenf = glTexGenf;
    ps->glTexGenfv = glTexGenfv;
    ps->glTexGeni = glTexGeni;
    ps->glTexGeniv = glTexGeniv;
    ps->glTexImage1D = glTexImage1D;
    ps->glTexImage2D = glTexImage2D;
    ps->glTexParameterf = glTexParameterf;
    ps->glTexParameterfv = glTexParameterfv;
    ps->glTexParameteri = glTexParameteri;
    ps->glTexParameteriv = glTexParameteriv;
    ps->glTexSubImage1D = glTexSubImage1D;
    ps->glTexSubImage2D = glTexSubImage2D;
    ps->glTranslated = glTranslated;
    ps->glTranslatef = glTranslatef;
    ps->glVertex2d = glVertex2d;
    ps->glVertex2dv = glVertex2dv;
    ps->glVertex2f = glVertex2f;
    ps->glVertex2fv = glVertex2fv;
    ps->glVertex2i = glVertex2i;
    ps->glVertex2iv = glVertex2iv;
    ps->glVertex2s = glVertex2s;
    ps->glVertex2sv = glVertex2sv;
    ps->glVertex3d = glVertex3d;
    ps->glVertex3dv = glVertex3dv;
    ps->glVertex3f = glVertex3f;
    ps->glVertex3fv = glVertex3fv;
    ps->glVertex3i = glVertex3i;
    ps->glVertex3iv = glVertex3iv;
    ps->glVertex3s = glVertex3s;
    ps->glVertex3sv = glVertex3sv;
    ps->glVertex4d = glVertex4d;
    ps->glVertex4dv = glVertex4dv;
    ps->glVertex4f = glVertex4f;
    ps->glVertex4fv = glVertex4fv;
    ps->glVertex4i = glVertex4i;
    ps->glVertex4iv = glVertex4iv;
    ps->glVertex4s = glVertex4s;
    ps->glVertex4sv = glVertex4sv;
    ps->glVertexPointer = glVertexPointer;
    ps->glViewport = glViewport;
}

}  // namespace kdk
