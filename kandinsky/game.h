#pragma once

#include <kandinsky/defines.h>
#include <kandinsky/input.h>
#include <kandinsky/opengl.h>
#include <kandinsky/window.h>

#include <SDL3/SDL_loadso.h>

namespace kdk {

struct PlatformState {
    Window Window = {};
    InputState InputState = {};

    u64 LastFrameTicks = 0;
    float FrameDelta = 0;

    std::string BasePath;

    LineBatcherRegistry LineBatchers = {};
    LineBatcher *DebugLineBatcher = nullptr;

    MeshRegistry Meshes = {};
    ShaderRegistry Shaders = {};
    TextureRegistry Textures = {};

    Camera FreeCamera = {
        .Position = glm::vec3(-4.0f, 1.0f, 1.0f),
    };

    glm::vec3 LightPosition = glm::vec3(1.2f, 1.0f, 2.0f);

    bool ShowDebugWindow = true;

    // OpenGL calls.
    // ---------------------------------------------------------------------------------------------
    // This sucks! I know!
    // But this was the easiest way for me to get OpenGL working with Plugin DLLs.
    // Hopefully when I move to Vulkan I can get rid of this nonesense.
    // https://www.reddit.com/r/gamedev/comments/8wayor/call_opengl_functions_from_dll/

    // clang-format off
	void (*glBindFramebuffer)  (GLenum target, GLuint framebuffer) = nullptr;
	void (*glBindRenderbuffer)  (GLenum target, GLuint renderbuffer) = nullptr;
	void (*glBlitFramebuffer)  (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) = nullptr;
	GLenum (*glCheckFramebufferStatus)  (GLenum target) = nullptr;
	void (*glDeleteFramebuffers)  (GLsizei n, const GLuint* framebuffers) = nullptr;
	void (*glDeleteRenderbuffers)  (GLsizei n, const GLuint* renderbuffers) = nullptr;
	void (*glFramebufferRenderbuffer)  (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) = nullptr;
	void (*glFramebufferTexture1D)  (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) = nullptr;
	void (*glFramebufferTexture2D)  (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) = nullptr;
	void (*glFramebufferTexture3D)  (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint layer) = nullptr;
	void (*glFramebufferTextureLayer)  (GLenum target,GLenum attachment, GLuint texture,GLint level,GLint layer) = nullptr;
	void (*glGenFramebuffers)  (GLsizei n, GLuint* framebuffers) = nullptr;
	void (*glGenRenderbuffers)  (GLsizei n, GLuint* renderbuffers) = nullptr;
	void (*glGenerateMipmap)  (GLenum target) = nullptr;
	void (*glGetFramebufferAttachmentParameteriv)  (GLenum target, GLenum attachment, GLenum pname, GLint* params) = nullptr;
	void (*glGetRenderbufferParameteriv)  (GLenum target, GLenum pname, GLint* params) = nullptr;
	GLboolean (*glIsFramebuffer)  (GLuint framebuffer) = nullptr;
	GLboolean (*glIsRenderbuffer)  (GLuint renderbuffer) = nullptr;
	void (*glRenderbufferStorage)  (GLenum target, GLenum internalformat, GLsizei width, GLsizei height) = nullptr;
	void (*glRenderbufferStorageMultisample)  (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) = nullptr;

	void (*glActiveTexture)  (GLenum texture) = nullptr;
	void (*glClientActiveTexture)  (GLenum texture) = nullptr;
	void (*glCompressedTexImage1D)  (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexImage2D)  (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexImage3D)  (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexSubImage1D)  (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexSubImage2D)  (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexSubImage3D)  (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data) = nullptr;
	void (*glGetCompressedTexImage)  (GLenum target, GLint lod, void *img) = nullptr;
	void (*glLoadTransposeMatrixd)  (const GLdouble m[16]) = nullptr;
	void (*glLoadTransposeMatrixf)  (const GLfloat m[16]) = nullptr;
	void (*glMultTransposeMatrixd)  (const GLdouble m[16]) = nullptr;
	void (*glMultTransposeMatrixf)  (const GLfloat m[16]) = nullptr;
	void (*glMultiTexCoord1d)  (GLenum target, GLdouble s) = nullptr;
	void (*glMultiTexCoord1dv)  (GLenum target, const GLdouble *v) = nullptr;
	void (*glMultiTexCoord1f)  (GLenum target, GLfloat s) = nullptr;
	void (*glMultiTexCoord1fv)  (GLenum target, const GLfloat *v) = nullptr;
	void (*glMultiTexCoord1i)  (GLenum target, GLint s) = nullptr;
	void (*glMultiTexCoord1iv)  (GLenum target, const GLint *v) = nullptr;
	void (*glMultiTexCoord1s)  (GLenum target, GLshort s) = nullptr;
	void (*glMultiTexCoord1sv)  (GLenum target, const GLshort *v) = nullptr;
	void (*glMultiTexCoord2d)  (GLenum target, GLdouble s, GLdouble t) = nullptr;
	void (*glMultiTexCoord2dv)  (GLenum target, const GLdouble *v) = nullptr;
	void (*glMultiTexCoord2f)  (GLenum target, GLfloat s, GLfloat t) = nullptr;
	void (*glMultiTexCoord2fv)  (GLenum target, const GLfloat *v) = nullptr;
	void (*glMultiTexCoord2i)  (GLenum target, GLint s, GLint t) = nullptr;
	void (*glMultiTexCoord2iv)  (GLenum target, const GLint *v) = nullptr;
	void (*glMultiTexCoord2s)  (GLenum target, GLshort s, GLshort t) = nullptr;
	void (*glMultiTexCoord2sv)  (GLenum target, const GLshort *v) = nullptr;
	void (*glMultiTexCoord3d)  (GLenum target, GLdouble s, GLdouble t, GLdouble r) = nullptr;
	void (*glMultiTexCoord3dv)  (GLenum target, const GLdouble *v) = nullptr;
	void (*glMultiTexCoord3f)  (GLenum target, GLfloat s, GLfloat t, GLfloat r) = nullptr;
	void (*glMultiTexCoord3fv)  (GLenum target, const GLfloat *v) = nullptr;
	void (*glMultiTexCoord3i)  (GLenum target, GLint s, GLint t, GLint r) = nullptr;
	void (*glMultiTexCoord3iv)  (GLenum target, const GLint *v) = nullptr;
	void (*glMultiTexCoord3s)  (GLenum target, GLshort s, GLshort t, GLshort r) = nullptr;
	void (*glMultiTexCoord3sv)  (GLenum target, const GLshort *v) = nullptr;
	void (*glMultiTexCoord4d)  (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q) = nullptr;
	void (*glMultiTexCoord4dv)  (GLenum target, const GLdouble *v) = nullptr;
	void (*glMultiTexCoord4f)  (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q) = nullptr;
	void (*glMultiTexCoord4fv)  (GLenum target, const GLfloat *v) = nullptr;
	void (*glMultiTexCoord4i)  (GLenum target, GLint s, GLint t, GLint r, GLint q) = nullptr;
	void (*glMultiTexCoord4iv)  (GLenum target, const GLint *v) = nullptr;
	void (*glMultiTexCoord4s)  (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q) = nullptr;
	void (*glMultiTexCoord4sv)  (GLenum target, const GLshort *v) = nullptr;
	void (*glSampleCoverage)  (GLclampf value, GLboolean invert) = nullptr;

	void (*glBeginConditionalRender)  (GLuint id, GLenum mode) = nullptr;
	void (*glBeginTransformFeedback)  (GLenum primitiveMode) = nullptr;
	void (*glBindFragDataLocation)  (GLuint program, GLuint colorNumber, const GLchar* name) = nullptr;
	void (*glClampColor)  (GLenum target, GLenum clamp) = nullptr;
	void (*glClearBufferfi)  (GLenum buffer, GLint drawBuffer, GLfloat depth, GLint stencil) = nullptr;
	void (*glClearBufferfv)  (GLenum buffer, GLint drawBuffer, const GLfloat* value) = nullptr;
	void (*glClearBufferiv)  (GLenum buffer, GLint drawBuffer, const GLint* value) = nullptr;
	void (*glClearBufferuiv)  (GLenum buffer, GLint drawBuffer, const GLuint* value) = nullptr;
	void (*glColorMaski)  (GLuint buf, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) = nullptr;
	void (*glDisablei)  (GLenum cap, GLuint index) = nullptr;
	void (*glEnablei)  (GLenum cap, GLuint index) = nullptr;
	void (*glEndConditionalRender)  (void) = nullptr;
	void (*glEndTransformFeedback)  (void) = nullptr;
	void (*glGetBooleani_v)  (GLenum pname, GLuint index, GLboolean* data) = nullptr;
	GLint (*glGetFragDataLocation)  (GLuint program, const GLchar* name) = nullptr;
	const GLubyte* (*glGetStringi) (GLenum name, GLuint index) = nullptr;
	void (*glGetTexParameterIiv)  (GLenum target, GLenum pname, GLint* params) = nullptr;
	void (*glGetTexParameterIuiv)  (GLenum target, GLenum pname, GLuint* params) = nullptr;
	void (*glGetTransformFeedbackVarying)  (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name) = nullptr;
	void (*glGetUniformuiv)  (GLuint program, GLint location, GLuint* params) = nullptr;
	void (*glGetVertexAttribIiv)  (GLuint index, GLenum pname, GLint* params) = nullptr;
	void (*glGetVertexAttribIuiv)  (GLuint index, GLenum pname, GLuint* params) = nullptr;
	GLboolean (*glIsEnabledi)  (GLenum cap, GLuint index) = nullptr;
	void (*glTexParameterIiv)  (GLenum target, GLenum pname, const GLint* params) = nullptr;
	void (*glTexParameterIuiv)  (GLenum target, GLenum pname, const GLuint* params) = nullptr;
	void (*glTransformFeedbackVaryings)  (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode) = nullptr;
	void (*glUniform1ui)  (GLint location, GLuint v0) = nullptr;
	void (*glUniform1uiv)  (GLint location, GLsizei count, const GLuint* value) = nullptr;
	void (*glUniform2ui)  (GLint location, GLuint v0, GLuint v1) = nullptr;
	void (*glUniform2uiv)  (GLint location, GLsizei count, const GLuint* value) = nullptr;
	void (*glUniform3ui)  (GLint location, GLuint v0, GLuint v1, GLuint v2) = nullptr;
	void (*glUniform3uiv)  (GLint location, GLsizei count, const GLuint* value) = nullptr;
	void (*glUniform4ui)  (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) = nullptr;
	void (*glUniform4uiv)  (GLint location, GLsizei count, const GLuint* value) = nullptr;
	void (*glVertexAttribI1i)  (GLuint index, GLint v0) = nullptr;
	void (*glVertexAttribI1iv)  (GLuint index, const GLint* v0) = nullptr;
	void (*glVertexAttribI1ui)  (GLuint index, GLuint v0) = nullptr;
	void (*glVertexAttribI1uiv)  (GLuint index, const GLuint* v0) = nullptr;
	void (*glVertexAttribI2i)  (GLuint index, GLint v0, GLint v1) = nullptr;
	void (*glVertexAttribI2iv)  (GLuint index, const GLint* v0) = nullptr;
	void (*glVertexAttribI2ui)  (GLuint index, GLuint v0, GLuint v1) = nullptr;
	void (*glVertexAttribI2uiv)  (GLuint index, const GLuint* v0) = nullptr;
	void (*glVertexAttribI3i)  (GLuint index, GLint v0, GLint v1, GLint v2) = nullptr;
	void (*glVertexAttribI3iv)  (GLuint index, const GLint* v0) = nullptr;
	void (*glVertexAttribI3ui)  (GLuint index, GLuint v0, GLuint v1, GLuint v2) = nullptr;
	void (*glVertexAttribI3uiv)  (GLuint index, const GLuint* v0) = nullptr;
	void (*glVertexAttribI4bv)  (GLuint index, const GLbyte* v0) = nullptr;
	void (*glVertexAttribI4i)  (GLuint index, GLint v0, GLint v1, GLint v2, GLint v3) = nullptr;
	void (*glVertexAttribI4iv)  (GLuint index, const GLint* v0) = nullptr;
	void (*glVertexAttribI4sv)  (GLuint index, const GLshort* v0) = nullptr;
	void (*glVertexAttribI4ubv)  (GLuint index, const GLubyte* v0) = nullptr;
	void (*glVertexAttribI4ui)  (GLuint index, GLuint v0, GLuint v1, GLuint v2, GLuint v3) = nullptr;
	void (*glVertexAttribI4uiv)  (GLuint index, const GLuint* v0) = nullptr;
	void (*glVertexAttribI4usv)  (GLuint index, const GLushort* v0) = nullptr;
	void (*glVertexAttribIPointer)  (GLuint index, GLint size, GLenum type, GLsizei stride, const void*pointer) = nullptr;

	void (*glAttachShader) (GLuint program, GLuint shader) = nullptr;
	void (*glBindAttribLocation)  (GLuint program, GLuint index, const GLchar* name) = nullptr;
	void (*glBlendEquationSeparate)  (GLenum modeRGB, GLenum modeAlpha) = nullptr;
	void (*glCompileShader)  (GLuint shader) = nullptr;
	GLuint (*glCreateProgram)  (void) = nullptr;
	GLuint (*glCreateShader)  (GLenum type) = nullptr;
	void (*glDeleteProgram)  (GLuint program) = nullptr;
	void (*glDeleteShader)  (GLuint shader) = nullptr;
	void (*glDetachShader)  (GLuint program, GLuint shader) = nullptr;
	void (*glDisableVertexAttribArray)  (GLuint index) = nullptr;
	void (*glDrawBuffers)  (GLsizei n, const GLenum* bufs) = nullptr;
	void (*glEnableVertexAttribArray)  (GLuint index) = nullptr;
	void (*glGetActiveAttrib)  (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name) = nullptr;
	void (*glGetActiveUniform)  (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name) = nullptr;
	void (*glGetAttachedShaders)  (GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders) = nullptr;
	GLint (*glGetAttribLocation)  (GLuint program, const GLchar* name) = nullptr;
	void (*glGetProgramInfoLog)  (GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog) = nullptr;
	void (*glGetProgramiv)  (GLuint program, GLenum pname, GLint* param) = nullptr;
	void (*glGetShaderInfoLog)  (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog) = nullptr;
	void (*glGetShaderSource)  (GLuint obj, GLsizei maxLength, GLsizei* length, GLchar* source) = nullptr;
	void (*glGetShaderiv)  (GLuint shader, GLenum pname, GLint* param) = nullptr;
	GLint (*glGetUniformLocation)  (GLuint program, const GLchar* name) = nullptr;
	void (*glGetUniformfv)  (GLuint program, GLint location, GLfloat* params) = nullptr;
	void (*glGetUniformiv)  (GLuint program, GLint location, GLint* params) = nullptr;
	void (*glGetVertexAttribPointerv)  (GLuint index, GLenum pname, void** pointer) = nullptr;
	void (*glGetVertexAttribdv)  (GLuint index, GLenum pname, GLdouble* params) = nullptr;
	void (*glGetVertexAttribfv)  (GLuint index, GLenum pname, GLfloat* params) = nullptr;
	void (*glGetVertexAttribiv)  (GLuint index, GLenum pname, GLint* params) = nullptr;
	GLboolean (*glIsProgram)  (GLuint program) = nullptr;
	GLboolean (*glIsShader)  (GLuint shader) = nullptr;
	void (*glLinkProgram)  (GLuint program) = nullptr;
	void (*glShaderSource)  (GLuint shader, GLsizei count, const GLchar *const* string, const GLint* length) = nullptr;
	void (*glStencilFuncSeparate)  (GLenum face, GLenum func, GLint ref, GLuint mask) = nullptr;
	void (*glStencilMaskSeparate)  (GLenum face, GLuint mask) = nullptr;
	void (*glStencilOpSeparate)  (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) = nullptr;
	void (*glUniform1f)  (GLint location, GLfloat v0) = nullptr;
	void (*glUniform1fv)  (GLint location, GLsizei count, const GLfloat* value) = nullptr;
	void (*glUniform1i)  (GLint location, GLint v0) = nullptr;
	void (*glUniform1iv)  (GLint location, GLsizei count, const GLint* value) = nullptr;
	void (*glUniform2f)  (GLint location, GLfloat v0, GLfloat v1) = nullptr;
	void (*glUniform2fv)  (GLint location, GLsizei count, const GLfloat* value) = nullptr;
	void (*glUniform2i)  (GLint location, GLint v0, GLint v1) = nullptr;
	void (*glUniform2iv)  (GLint location, GLsizei count, const GLint* value) = nullptr;
	void (*glUniform3f)  (GLint location, GLfloat v0, GLfloat v1, GLfloat v2) = nullptr;
	void (*glUniform3fv)  (GLint location, GLsizei count, const GLfloat* value) = nullptr;
	void (*glUniform3i)  (GLint location, GLint v0, GLint v1, GLint v2) = nullptr;
	void (*glUniform3iv)  (GLint location, GLsizei count, const GLint* value) = nullptr;
	void (*glUniform4f)  (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) = nullptr;
	void (*glUniform4fv)  (GLint location, GLsizei count, const GLfloat* value) = nullptr;
	void (*glUniform4i)  (GLint location, GLint v0, GLint v1, GLint v2, GLint v3) = nullptr;
	void (*glUniform4iv)  (GLint location, GLsizei count, const GLint* value) = nullptr;
	void (*glUniformMatrix2fv)  (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) = nullptr;
	void (*glUniformMatrix3fv)  (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) = nullptr;
	void (*glUniformMatrix4fv)  (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value) = nullptr;
	void (*glUseProgram)  (GLuint program) = nullptr;
	void (*glValidateProgram)  (GLuint program) = nullptr;
	void (*glVertexAttrib1d)  (GLuint index, GLdouble x) = nullptr;
	void (*glVertexAttrib1dv)  (GLuint index, const GLdouble* v) = nullptr;
	void (*glVertexAttrib1f)  (GLuint index, GLfloat x) = nullptr;
	void (*glVertexAttrib1fv)  (GLuint index, const GLfloat* v) = nullptr;
	void (*glVertexAttrib1s)  (GLuint index, GLshort x) = nullptr;
	void (*glVertexAttrib1sv)  (GLuint index, const GLshort* v) = nullptr;
	void (*glVertexAttrib2d)  (GLuint index, GLdouble x, GLdouble y) = nullptr;
	void (*glVertexAttrib2dv)  (GLuint index, const GLdouble* v) = nullptr;
	void (*glVertexAttrib2f)  (GLuint index, GLfloat x, GLfloat y) = nullptr;
	void (*glVertexAttrib2fv)  (GLuint index, const GLfloat* v) = nullptr;
	void (*glVertexAttrib2s)  (GLuint index, GLshort x, GLshort y) = nullptr;
	void (*glVertexAttrib2sv)  (GLuint index, const GLshort* v) = nullptr;
	void (*glVertexAttrib3d)  (GLuint index, GLdouble x, GLdouble y, GLdouble z) = nullptr;
	void (*glVertexAttrib3dv)  (GLuint index, const GLdouble* v) = nullptr;
	void (*glVertexAttrib3f)  (GLuint index, GLfloat x, GLfloat y, GLfloat z) = nullptr;
	void (*glVertexAttrib3fv)  (GLuint index, const GLfloat* v) = nullptr;
	void (*glVertexAttrib3s)  (GLuint index, GLshort x, GLshort y, GLshort z) = nullptr;
	void (*glVertexAttrib3sv)  (GLuint index, const GLshort* v) = nullptr;
	void (*glVertexAttrib4Nbv)  (GLuint index, const GLbyte* v) = nullptr;
	void (*glVertexAttrib4Niv)  (GLuint index, const GLint* v) = nullptr;
	void (*glVertexAttrib4Nsv)  (GLuint index, const GLshort* v) = nullptr;
	void (*glVertexAttrib4Nub)  (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) = nullptr;
	void (*glVertexAttrib4Nubv)  (GLuint index, const GLubyte* v) = nullptr;
	void (*glVertexAttrib4Nuiv)  (GLuint index, const GLuint* v) = nullptr;
	void (*glVertexAttrib4Nusv)  (GLuint index, const GLushort* v) = nullptr;
	void (*glVertexAttrib4bv)  (GLuint index, const GLbyte* v) = nullptr;
	void (*glVertexAttrib4d)  (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) = nullptr;
	void (*glVertexAttrib4dv)  (GLuint index, const GLdouble* v) = nullptr;
	void (*glVertexAttrib4f)  (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) = nullptr;
	void (*glVertexAttrib4fv)  (GLuint index, const GLfloat* v) = nullptr;
	void (*glVertexAttrib4iv)  (GLuint index, const GLint* v) = nullptr;
	void (*glVertexAttrib4s)  (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) = nullptr;
	void (*glVertexAttrib4sv)  (GLuint index, const GLshort* v) = nullptr;
	void (*glVertexAttrib4ubv)  (GLuint index, const GLubyte* v) = nullptr;
	void (*glVertexAttrib4uiv)  (GLuint index, const GLuint* v) = nullptr;
	void (*glVertexAttrib4usv)  (GLuint index, const GLushort* v) = nullptr;
	void (*glVertexAttribPointer)  (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void* pointer) = nullptr;


	void (*glBindVertexArray)(GLuint array) = nullptr;
    void (*glDeleteVertexArrays)(GLsizei n, const GLuint* arrays) = nullptr;
    void (*glGenVertexArrays)(GLsizei n, GLuint* arrays) = nullptr;
    GLboolean (*glIsVertexArray)(GLuint array) = nullptr;

	void (*glBeginQuery) (GLenum target, GLuint id) = nullptr;
	void (*glBindBuffer) (GLenum target, GLuint buffer) = nullptr;
	void (*glBufferData) (GLenum target, GLsizeiptr size, const void* data, GLenum usage) = nullptr;
	void (*glBufferSubData) (GLenum target, GLintptr offset, GLsizeiptr size, const void* data) = nullptr;
	void (*glDeleteBuffers) (GLsizei n, const GLuint* buffers) = nullptr;
	void (*glDeleteQueries) (GLsizei n, const GLuint* ids) = nullptr;
	void (*glEndQuery) (GLenum target) = nullptr;
	void (*glGenBuffers) (GLsizei n, GLuint* buffers) = nullptr;
	void (*glGenQueries) (GLsizei n, GLuint* ids) = nullptr;
	void (*glGetBufferParameteriv) (GLenum target, GLenum pname, GLint* params) = nullptr;
	void (*glGetBufferPointerv) (GLenum target, GLenum pname, void** params) = nullptr;
	void (*glGetBufferSubData) (GLenum target, GLintptr offset, GLsizeiptr size, void* data) = nullptr;
	void (*glGetQueryObjectiv) (GLuint id, GLenum pname, GLint* params) = nullptr;
	void (*glGetQueryObjectuiv) (GLuint id, GLenum pname, GLuint* params) = nullptr;
	void (*glGetQueryiv) (GLenum target, GLenum pname, GLint* params) = nullptr;
	GLboolean (*glIsBuffer) (GLuint buffer) = nullptr;
	GLboolean (*glIsQuery) (GLuint id) = nullptr;
	void* (*glMapBuffer) (GLenum target, GLenum access) = nullptr;
	GLboolean (*glUnmapBuffer) (GLenum target) = nullptr;

	void (*glAccum) (GLenum op, GLfloat value) = nullptr;
	void (*glAlphaFunc) (GLenum func, GLclampf ref) = nullptr;
	GLboolean (*glAreTexturesResident) (GLsizei n, const GLuint *textures, GLboolean *residences) = nullptr;
	void (*glArrayElement) (GLint i) = nullptr;
	void (*glBegin) (GLenum mode) = nullptr;
	void (*glBindTexture) (GLenum target, GLuint texture) = nullptr;
	void (*glBitmap) (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap) = nullptr;
	void (*glBlendFunc) (GLenum sfactor, GLenum dfactor) = nullptr;
	void (*glCallList) (GLuint list) = nullptr;
	void (*glCallLists) (GLsizei n, GLenum type, const void *lists) = nullptr;
	void (*glClear) (GLbitfield mask) = nullptr;
	void (*glClearAccum) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) = nullptr;
	void (*glClearColor) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha) = nullptr;
	void (*glClearDepth) (GLclampd depth) = nullptr;
	void (*glClearIndex) (GLfloat c) = nullptr;
	void (*glClearStencil) (GLint s) = nullptr;
	void (*glClipPlane) (GLenum plane, const GLdouble *equation) = nullptr;
	void (*glColor3b) (GLbyte red, GLbyte green, GLbyte blue) = nullptr;
	void (*glColor3bv) (const GLbyte *v) = nullptr;
	void (*glColor3d) (GLdouble red, GLdouble green, GLdouble blue) = nullptr;
	void (*glColor3dv) (const GLdouble *v) = nullptr;
	void (*glColor3f) (GLfloat red, GLfloat green, GLfloat blue) = nullptr;
	void (*glColor3fv) (const GLfloat *v) = nullptr;
	void (*glColor3i) (GLint red, GLint green, GLint blue) = nullptr;
	void (*glColor3iv) (const GLint *v) = nullptr;
	void (*glColor3s) (GLshort red, GLshort green, GLshort blue) = nullptr;
	void (*glColor3sv) (const GLshort *v) = nullptr;
	void (*glColor3ub) (GLubyte red, GLubyte green, GLubyte blue) = nullptr;
	void (*glColor3ubv) (const GLubyte *v) = nullptr;
	void (*glColor3ui) (GLuint red, GLuint green, GLuint blue) = nullptr;
	void (*glColor3uiv) (const GLuint *v) = nullptr;
	void (*glColor3us) (GLushort red, GLushort green, GLushort blue) = nullptr;
	void (*glColor3usv) (const GLushort *v) = nullptr;
	void (*glColor4b) (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha) = nullptr;
	void (*glColor4bv) (const GLbyte *v) = nullptr;
	void (*glColor4d) (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha) = nullptr;
	void (*glColor4dv) (const GLdouble *v) = nullptr;
	void (*glColor4f) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) = nullptr;
	void (*glColor4fv) (const GLfloat *v) = nullptr;
	void (*glColor4i) (GLint red, GLint green, GLint blue, GLint alpha) = nullptr;
	void (*glColor4iv) (const GLint *v) = nullptr;
	void (*glColor4s) (GLshort red, GLshort green, GLshort blue, GLshort alpha) = nullptr;
	void (*glColor4sv) (const GLshort *v) = nullptr;
	void (*glColor4ub) (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha) = nullptr;
	void (*glColor4ubv) (const GLubyte *v) = nullptr;
	void (*glColor4ui) (GLuint red, GLuint green, GLuint blue, GLuint alpha) = nullptr;
	void (*glColor4uiv) (const GLuint *v) = nullptr;
	void (*glColor4us) (GLushort red, GLushort green, GLushort blue, GLushort alpha) = nullptr;
	void (*glColor4usv) (const GLushort *v) = nullptr;
	void (*glColorMask) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) = nullptr;
	void (*glColorMaterial) (GLenum face, GLenum mode) = nullptr;
	void (*glColorPointer) (GLint size, GLenum type, GLsizei stride, const void *pointer) = nullptr;
	void (*glCopyPixels) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type) = nullptr;
	void (*glCopyTexImage1D) (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border) = nullptr;
	void (*glCopyTexImage2D) (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) = nullptr;
	void (*glCopyTexSubImage1D) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) = nullptr;
	void (*glCopyTexSubImage2D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) = nullptr;
	void (*glCullFace) (GLenum mode) = nullptr;
	void (*glDeleteLists) (GLuint list, GLsizei range) = nullptr;
	void (*glDeleteTextures) (GLsizei n, const GLuint *textures) = nullptr;
	void (*glDepthFunc) (GLenum func) = nullptr;
	void (*glDepthMask) (GLboolean flag) = nullptr;
	void (*glDepthRange) (GLclampd zNear, GLclampd zFar) = nullptr;
	void (*glDisable) (GLenum cap) = nullptr;
	void (*glDisableClientState) (GLenum array) = nullptr;
	void (*glDrawArrays) (GLenum mode, GLint first, GLsizei count) = nullptr;
	void (*glDrawBuffer) (GLenum mode) = nullptr;
	void (*glDrawElements) (GLenum mode, GLsizei count, GLenum type, const void *indices) = nullptr;
	void (*glDrawPixels) (GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glEdgeFlag) (GLboolean flag) = nullptr;
	void (*glEdgeFlagPointer) (GLsizei stride, const void *pointer) = nullptr;
	void (*glEdgeFlagv) (const GLboolean *flag) = nullptr;
	void (*glEnable) (GLenum cap) = nullptr;
	void (*glEnableClientState) (GLenum array) = nullptr;
	void (*glEnd) (void) = nullptr;
	void (*glEndList) (void) = nullptr;
	void (*glEvalCoord1d) (GLdouble u) = nullptr;
	void (*glEvalCoord1dv) (const GLdouble *u) = nullptr;
	void (*glEvalCoord1f) (GLfloat u) = nullptr;
	void (*glEvalCoord1fv) (const GLfloat *u) = nullptr;
	void (*glEvalCoord2d) (GLdouble u, GLdouble v) = nullptr;
	void (*glEvalCoord2dv) (const GLdouble *u) = nullptr;
	void (*glEvalCoord2f) (GLfloat u, GLfloat v) = nullptr;
	void (*glEvalCoord2fv) (const GLfloat *u) = nullptr;
	void (*glEvalMesh1) (GLenum mode, GLint i1, GLint i2) = nullptr;
	void (*glEvalMesh2) (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2) = nullptr;
	void (*glEvalPoint1) (GLint i) = nullptr;
	void (*glEvalPoint2) (GLint i, GLint j) = nullptr;
	void (*glFeedbackBuffer) (GLsizei size, GLenum type, GLfloat *buffer) = nullptr;
	void (*glFinish) (void) = nullptr;
	void (*glFlush) (void) = nullptr;
	void (*glFogf) (GLenum pname, GLfloat param) = nullptr;
	void (*glFogfv) (GLenum pname, const GLfloat *params) = nullptr;
	void (*glFogi) (GLenum pname, GLint param) = nullptr;
	void (*glFogiv) (GLenum pname, const GLint *params) = nullptr;
	void (*glFrontFace) (GLenum mode) = nullptr;
	void (*glFrustum) (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar) = nullptr;
	GLuint (*glGenLists) (GLsizei range) = nullptr;
	void (*glGenTextures) (GLsizei n, GLuint *textures) = nullptr;
	void (*glGetBooleanv) (GLenum pname, GLboolean *params) = nullptr;
	void (*glGetClipPlane) (GLenum plane, GLdouble *equation) = nullptr;
	void (*glGetDoublev) (GLenum pname, GLdouble *params) = nullptr;
	GLenum (*glGetError) (void) = nullptr;
	void (*glGetFloatv) (GLenum pname, GLfloat *params) = nullptr;
	void (*glGetIntegerv) (GLenum pname, GLint *params) = nullptr;
	void (*glGetLightfv) (GLenum light, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetLightiv) (GLenum light, GLenum pname, GLint *params) = nullptr;
	void (*glGetMapdv) (GLenum target, GLenum query, GLdouble *v) = nullptr;
	void (*glGetMapfv) (GLenum target, GLenum query, GLfloat *v) = nullptr;
	void (*glGetMapiv) (GLenum target, GLenum query, GLint *v) = nullptr;
	void (*glGetMaterialfv) (GLenum face, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetMaterialiv) (GLenum face, GLenum pname, GLint *params) = nullptr;
	void (*glGetPixelMapfv) (GLenum map, GLfloat *values) = nullptr;
	void (*glGetPixelMapuiv) (GLenum map, GLuint *values) = nullptr;
	void (*glGetPixelMapusv) (GLenum map, GLushort *values) = nullptr;
	void (*glGetPointerv) (GLenum pname, void* *params) = nullptr;
	void (*glGetPolygonStipple) (GLubyte *mask) = nullptr;
	const GLubyte* (*glGetString) (GLenum name) = nullptr;
	void (*glGetTexEnvfv) (GLenum target, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetTexEnviv) (GLenum target, GLenum pname, GLint *params) = nullptr;
	void (*glGetTexGendv) (GLenum coord, GLenum pname, GLdouble *params) = nullptr;
	void (*glGetTexGenfv) (GLenum coord, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetTexGeniv) (GLenum coord, GLenum pname, GLint *params) = nullptr;
	void (*glGetTexImage) (GLenum target, GLint level, GLenum format, GLenum type, void *pixels) = nullptr;
	void (*glGetTexLevelParameterfv) (GLenum target, GLint level, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetTexLevelParameteriv) (GLenum target, GLint level, GLenum pname, GLint *params) = nullptr;
	void (*glGetTexParameterfv) (GLenum target, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetTexParameteriv) (GLenum target, GLenum pname, GLint *params) = nullptr;
	void (*glHint) (GLenum target, GLenum mode) = nullptr;
	void (*glIndexMask) (GLuint mask) = nullptr;
	void (*glIndexPointer) (GLenum type, GLsizei stride, const void *pointer) = nullptr;
	void (*glIndexd) (GLdouble c) = nullptr;
	void (*glIndexdv) (const GLdouble *c) = nullptr;
	void (*glIndexf) (GLfloat c) = nullptr;
	void (*glIndexfv) (const GLfloat *c) = nullptr;
	void (*glIndexi) (GLint c) = nullptr;
	void (*glIndexiv) (const GLint *c) = nullptr;
	void (*glIndexs) (GLshort c) = nullptr;
	void (*glIndexsv) (const GLshort *c) = nullptr;
	void (*glIndexub) (GLubyte c) = nullptr;
	void (*glIndexubv) (const GLubyte *c) = nullptr;
	void (*glInitNames) (void) = nullptr;
	void (*glInterleavedArrays) (GLenum format, GLsizei stride, const void *pointer) = nullptr;
	GLboolean (*glIsEnabled) (GLenum cap) = nullptr;
	GLboolean (*glIsList) (GLuint list) = nullptr;
	GLboolean (*glIsTexture) (GLuint texture) = nullptr;
	void (*glLightModelf) (GLenum pname, GLfloat param) = nullptr;
	void (*glLightModelfv) (GLenum pname, const GLfloat *params) = nullptr;
	void (*glLightModeli) (GLenum pname, GLint param) = nullptr;
	void (*glLightModeliv) (GLenum pname, const GLint *params) = nullptr;
	void (*glLightf) (GLenum light, GLenum pname, GLfloat param) = nullptr;
	void (*glLightfv) (GLenum light, GLenum pname, const GLfloat *params) = nullptr;
	void (*glLighti) (GLenum light, GLenum pname, GLint param) = nullptr;
	void (*glLightiv) (GLenum light, GLenum pname, const GLint *params) = nullptr;
	void (*glLineStipple) (GLint factor, GLushort pattern) = nullptr;
	void (*glLineWidth) (GLfloat width) = nullptr;
	void (*glListBase) (GLuint base) = nullptr;
	void (*glLoadIdentity) (void) = nullptr;
	void (*glLoadMatrixd) (const GLdouble *m) = nullptr;
	void (*glLoadMatrixf) (const GLfloat *m) = nullptr;
	void (*glLoadName) (GLuint name) = nullptr;
	void (*glLogicOp) (GLenum opcode) = nullptr;
	void (*glMap1d) (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points) = nullptr;
	void (*glMap1f) (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points) = nullptr;
	void (*glMap2d) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points) = nullptr;
	void (*glMap2f) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points) = nullptr;
	void (*glMapGrid1d) (GLint un, GLdouble u1, GLdouble u2) = nullptr;
	void (*glMapGrid1f) (GLint un, GLfloat u1, GLfloat u2) = nullptr;
	void (*glMapGrid2d) (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2) = nullptr;
	void (*glMapGrid2f) (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2) = nullptr;
	void (*glMaterialf) (GLenum face, GLenum pname, GLfloat param) = nullptr;
	void (*glMaterialfv) (GLenum face, GLenum pname, const GLfloat *params) = nullptr;
	void (*glMateriali) (GLenum face, GLenum pname, GLint param) = nullptr;
	void (*glMaterialiv) (GLenum face, GLenum pname, const GLint *params) = nullptr;
	void (*glMatrixMode) (GLenum mode) = nullptr;
	void (*glMultMatrixd) (const GLdouble *m) = nullptr;
	void (*glMultMatrixf) (const GLfloat *m) = nullptr;
	void (*glNewList) (GLuint list, GLenum mode) = nullptr;
	void (*glNormal3b) (GLbyte nx, GLbyte ny, GLbyte nz) = nullptr;
	void (*glNormal3bv) (const GLbyte *v) = nullptr;
	void (*glNormal3d) (GLdouble nx, GLdouble ny, GLdouble nz) = nullptr;
	void (*glNormal3dv) (const GLdouble *v) = nullptr;
	void (*glNormal3f) (GLfloat nx, GLfloat ny, GLfloat nz) = nullptr;
	void (*glNormal3fv) (const GLfloat *v) = nullptr;
	void (*glNormal3i) (GLint nx, GLint ny, GLint nz) = nullptr;
	void (*glNormal3iv) (const GLint *v) = nullptr;
	void (*glNormal3s) (GLshort nx, GLshort ny, GLshort nz) = nullptr;
	void (*glNormal3sv) (const GLshort *v) = nullptr;
	void (*glNormalPointer) (GLenum type, GLsizei stride, const void *pointer) = nullptr;
	void (*glOrtho) (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar) = nullptr;
	void (*glPassThrough) (GLfloat token) = nullptr;
	void (*glPixelMapfv) (GLenum map, GLsizei mapsize, const GLfloat *values) = nullptr;
	void (*glPixelMapuiv) (GLenum map, GLsizei mapsize, const GLuint *values) = nullptr;
	void (*glPixelMapusv) (GLenum map, GLsizei mapsize, const GLushort *values) = nullptr;
	void (*glPixelStoref) (GLenum pname, GLfloat param) = nullptr;
	void (*glPixelStorei) (GLenum pname, GLint param) = nullptr;
	void (*glPixelTransferf) (GLenum pname, GLfloat param) = nullptr;
	void (*glPixelTransferi) (GLenum pname, GLint param) = nullptr;
	void (*glPixelZoom) (GLfloat xfactor, GLfloat yfactor) = nullptr;
	void (*glPointSize) (GLfloat size) = nullptr;
	void (*glPolygonMode) (GLenum face, GLenum mode) = nullptr;
	void (*glPolygonOffset) (GLfloat factor, GLfloat units) = nullptr;
	void (*glPolygonStipple) (const GLubyte *mask) = nullptr;
	void (*glPopAttrib) (void) = nullptr;
	void (*glPopClientAttrib) (void) = nullptr;
	void (*glPopMatrix) (void) = nullptr;
	void (*glPopName) (void) = nullptr;
	void (*glPrioritizeTextures) (GLsizei n, const GLuint *textures, const GLclampf *priorities) = nullptr;
	void (*glPushAttrib) (GLbitfield mask) = nullptr;
	void (*glPushClientAttrib) (GLbitfield mask) = nullptr;
	void (*glPushMatrix) (void) = nullptr;
	void (*glPushName) (GLuint name) = nullptr;
	void (*glRasterPos2d) (GLdouble x, GLdouble y) = nullptr;
	void (*glRasterPos2dv) (const GLdouble *v) = nullptr;
	void (*glRasterPos2f) (GLfloat x, GLfloat y) = nullptr;
	void (*glRasterPos2fv) (const GLfloat *v) = nullptr;
	void (*glRasterPos2i) (GLint x, GLint y) = nullptr;
	void (*glRasterPos2iv) (const GLint *v) = nullptr;
	void (*glRasterPos2s) (GLshort x, GLshort y) = nullptr;
	void (*glRasterPos2sv) (const GLshort *v) = nullptr;
	void (*glRasterPos3d) (GLdouble x, GLdouble y, GLdouble z) = nullptr;
	void (*glRasterPos3dv) (const GLdouble *v) = nullptr;
	void (*glRasterPos3f) (GLfloat x, GLfloat y, GLfloat z) = nullptr;
	void (*glRasterPos3fv) (const GLfloat *v) = nullptr;
	void (*glRasterPos3i) (GLint x, GLint y, GLint z) = nullptr;
	void (*glRasterPos3iv) (const GLint *v) = nullptr;
	void (*glRasterPos3s) (GLshort x, GLshort y, GLshort z) = nullptr;
	void (*glRasterPos3sv) (const GLshort *v) = nullptr;
	void (*glRasterPos4d) (GLdouble x, GLdouble y, GLdouble z, GLdouble w) = nullptr;
	void (*glRasterPos4dv) (const GLdouble *v) = nullptr;
	void (*glRasterPos4f) (GLfloat x, GLfloat y, GLfloat z, GLfloat w) = nullptr;
	void (*glRasterPos4fv) (const GLfloat *v) = nullptr;
	void (*glRasterPos4i) (GLint x, GLint y, GLint z, GLint w) = nullptr;
	void (*glRasterPos4iv) (const GLint *v) = nullptr;
	void (*glRasterPos4s) (GLshort x, GLshort y, GLshort z, GLshort w) = nullptr;
	void (*glRasterPos4sv) (const GLshort *v) = nullptr;
	void (*glReadBuffer) (GLenum mode) = nullptr;
	void (*glReadPixels) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels) = nullptr;
	void (*glRectd) (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2) = nullptr;
	void (*glRectdv) (const GLdouble *v1, const GLdouble *v2) = nullptr;
	void (*glRectf) (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2) = nullptr;
	void (*glRectfv) (const GLfloat *v1, const GLfloat *v2) = nullptr;
	void (*glRecti) (GLint x1, GLint y1, GLint x2, GLint y2) = nullptr;
	void (*glRectiv) (const GLint *v1, const GLint *v2) = nullptr;
	void (*glRects) (GLshort x1, GLshort y1, GLshort x2, GLshort y2) = nullptr;
	void (*glRectsv) (const GLshort *v1, const GLshort *v2) = nullptr;
	GLint (*glRenderMode) (GLenum mode) = nullptr;
	void (*glRotated) (GLdouble angle, GLdouble x, GLdouble y, GLdouble z) = nullptr;
	void (*glRotatef) (GLfloat angle, GLfloat x, GLfloat y, GLfloat z) = nullptr;
	void (*glScaled) (GLdouble x, GLdouble y, GLdouble z) = nullptr;
	void (*glScalef) (GLfloat x, GLfloat y, GLfloat z) = nullptr;
	void (*glScissor) (GLint x, GLint y, GLsizei width, GLsizei height) = nullptr;
	void (*glSelectBuffer) (GLsizei size, GLuint *buffer) = nullptr;
	void (*glShadeModel) (GLenum mode) = nullptr;
	void (*glStencilFunc) (GLenum func, GLint ref, GLuint mask) = nullptr;
	void (*glStencilMask) (GLuint mask) = nullptr;
	void (*glStencilOp) (GLenum fail, GLenum zfail, GLenum zpass) = nullptr;
	void (*glTexCoord1d) (GLdouble s) = nullptr;
	void (*glTexCoord1dv) (const GLdouble *v) = nullptr;
	void (*glTexCoord1f) (GLfloat s) = nullptr;
	void (*glTexCoord1fv) (const GLfloat *v) = nullptr;
	void (*glTexCoord1i) (GLint s) = nullptr;
	void (*glTexCoord1iv) (const GLint *v) = nullptr;
	void (*glTexCoord1s) (GLshort s) = nullptr;
	void (*glTexCoord1sv) (const GLshort *v) = nullptr;
	void (*glTexCoord2d) (GLdouble s, GLdouble t) = nullptr;
	void (*glTexCoord2dv) (const GLdouble *v) = nullptr;
	void (*glTexCoord2f) (GLfloat s, GLfloat t) = nullptr;
	void (*glTexCoord2fv) (const GLfloat *v) = nullptr;
	void (*glTexCoord2i) (GLint s, GLint t) = nullptr;
	void (*glTexCoord2iv) (const GLint *v) = nullptr;
	void (*glTexCoord2s) (GLshort s, GLshort t) = nullptr;
	void (*glTexCoord2sv) (const GLshort *v) = nullptr;
	void (*glTexCoord3d) (GLdouble s, GLdouble t, GLdouble r) = nullptr;
	void (*glTexCoord3dv) (const GLdouble *v) = nullptr;
	void (*glTexCoord3f) (GLfloat s, GLfloat t, GLfloat r) = nullptr;
	void (*glTexCoord3fv) (const GLfloat *v) = nullptr;
	void (*glTexCoord3i) (GLint s, GLint t, GLint r) = nullptr;
	void (*glTexCoord3iv) (const GLint *v) = nullptr;
	void (*glTexCoord3s) (GLshort s, GLshort t, GLshort r) = nullptr;
	void (*glTexCoord3sv) (const GLshort *v) = nullptr;
	void (*glTexCoord4d) (GLdouble s, GLdouble t, GLdouble r, GLdouble q) = nullptr;
	void (*glTexCoord4dv) (const GLdouble *v) = nullptr;
	void (*glTexCoord4f) (GLfloat s, GLfloat t, GLfloat r, GLfloat q) = nullptr;
	void (*glTexCoord4fv) (const GLfloat *v) = nullptr;
	void (*glTexCoord4i) (GLint s, GLint t, GLint r, GLint q) = nullptr;
	void (*glTexCoord4iv) (const GLint *v) = nullptr;
	void (*glTexCoord4s) (GLshort s, GLshort t, GLshort r, GLshort q) = nullptr;
	void (*glTexCoord4sv) (const GLshort *v) = nullptr;
	void (*glTexCoordPointer) (GLint size, GLenum type, GLsizei stride, const void *pointer) = nullptr;
	void (*glTexEnvf) (GLenum target, GLenum pname, GLfloat param) = nullptr;
	void (*glTexEnvfv) (GLenum target, GLenum pname, const GLfloat *params) = nullptr;
	void (*glTexEnvi) (GLenum target, GLenum pname, GLint param) = nullptr;
	void (*glTexEnviv) (GLenum target, GLenum pname, const GLint *params) = nullptr;
	void (*glTexGend) (GLenum coord, GLenum pname, GLdouble param) = nullptr;
	void (*glTexGendv) (GLenum coord, GLenum pname, const GLdouble *params) = nullptr;
	void (*glTexGenf) (GLenum coord, GLenum pname, GLfloat param) = nullptr;
	void (*glTexGenfv) (GLenum coord, GLenum pname, const GLfloat *params) = nullptr;
	void (*glTexGeni) (GLenum coord, GLenum pname, GLint param) = nullptr;
	void (*glTexGeniv) (GLenum coord, GLenum pname, const GLint *params) = nullptr;
	void (*glTexImage1D) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTexImage2D) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTexParameterf) (GLenum target, GLenum pname, GLfloat param) = nullptr;
	void (*glTexParameterfv) (GLenum target, GLenum pname, const GLfloat *params) = nullptr;
	void (*glTexParameteri) (GLenum target, GLenum pname, GLint param) = nullptr;
	void (*glTexParameteriv) (GLenum target, GLenum pname, const GLint *params) = nullptr;
	void (*glTexSubImage1D) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTexSubImage2D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTranslated) (GLdouble x, GLdouble y, GLdouble z) = nullptr;
	void (*glTranslatef) (GLfloat x, GLfloat y, GLfloat z) = nullptr;
	void (*glVertex2d) (GLdouble x, GLdouble y) = nullptr;
	void (*glVertex2dv) (const GLdouble *v) = nullptr;
	void (*glVertex2f) (GLfloat x, GLfloat y) = nullptr;
	void (*glVertex2fv) (const GLfloat *v) = nullptr;
	void (*glVertex2i) (GLint x, GLint y) = nullptr;
	void (*glVertex2iv) (const GLint *v) = nullptr;
	void (*glVertex2s) (GLshort x, GLshort y) = nullptr;
	void (*glVertex2sv) (const GLshort *v) = nullptr;
	void (*glVertex3d) (GLdouble x, GLdouble y, GLdouble z) = nullptr;
	void (*glVertex3dv) (const GLdouble *v) = nullptr;
	void (*glVertex3f) (GLfloat x, GLfloat y, GLfloat z) = nullptr;
	void (*glVertex3fv) (const GLfloat *v) = nullptr;
	void (*glVertex3i) (GLint x, GLint y, GLint z) = nullptr;
	void (*glVertex3iv) (const GLint *v) = nullptr;
	void (*glVertex3s) (GLshort x, GLshort y, GLshort z) = nullptr;
	void (*glVertex3sv) (const GLshort *v) = nullptr;
	void (*glVertex4d) (GLdouble x, GLdouble y, GLdouble z, GLdouble w) = nullptr;
	void (*glVertex4dv) (const GLdouble *v) = nullptr;
	void (*glVertex4f) (GLfloat x, GLfloat y, GLfloat z, GLfloat w) = nullptr;
	void (*glVertex4fv) (const GLfloat *v) = nullptr;
	void (*glVertex4i) (GLint x, GLint y, GLint z, GLint w) = nullptr;
	void (*glVertex4iv) (const GLint *v) = nullptr;
	void (*glVertex4s) (GLshort x, GLshort y, GLshort z, GLshort w) = nullptr;
	void (*glVertex4sv) (const GLshort *v) = nullptr;
	void (*glVertexPointer) (GLint size, GLenum type, GLsizei stride, const void *pointer) = nullptr;
	void (*glViewport) (GLint x, GLint y, GLsizei width, GLsizei height) = nullptr;
    // clang-format on
};

void PatchOpenGLFunctions(PlatformState *ps);

#ifdef __cplusplus
extern "C" {
#endif

__declspec(dllexport) bool DLLInit(PlatformState *platform_state);
__declspec(dllexport) bool GameInit(PlatformState *platform_state);
__declspec(dllexport) bool GameUpdate(PlatformState *platform_state);
__declspec(dllexport) bool GameRender(PlatformState *platform_state);

#ifdef __cplusplus
}
#endif

struct LoadedGameLibrary {
    SDL_SharedObject *SO = nullptr;
    bool (*DLLInit)(PlatformState *ps) = nullptr;
    bool (*GameInit)(PlatformState *ps) = nullptr;
    bool (*GameUpdate)(PlatformState *ps) = nullptr;
    bool (*GameRender)(PlatformState *ps) = nullptr;
};
bool IsValid(const LoadedGameLibrary &game_lib);

// Load the game library from a DLL and get the function pointers.
LoadedGameLibrary LoadGameLibrary(PlatformState *ps, const char *so_path);
void UnloadGameLibrary(LoadedGameLibrary *lgl);

}  // namespace kdk
